From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: md_5 <git@md-5.net>
Date: Thu, 17 Apr 2014 19:22:26 +1000
Subject: [PATCH] Expand team API to allow arbitrary strings.


diff --git a/src/main/java/org/bukkit/scoreboard/Team.java b/src/main/java/org/bukkit/scoreboard/Team.java
index 0000000000000000000000000000000000000000..0000000000000000000000000000000000000000 100644
--- a/src/main/java/org/bukkit/scoreboard/Team.java
+++ b/src/main/java/org/bukkit/scoreboard/Team.java
@@ -0,0 +0,0 @@ public interface Team {
      */
     Set<OfflinePlayer> getPlayers() throws IllegalStateException;
 
+    // Spigot start
+    /**
+     * Same as the player method, but with an arbitrary string.
+     *
+     * @see #getPlayers()
+     */
+    Set<String> getEntries() throws IllegalStateException;
+    // Spigot End
+
     /**
      * Gets the size of the team
      *
@@ -0,0 +0,0 @@ public interface Team {
      */
     void addPlayer(OfflinePlayer player) throws IllegalStateException, IllegalArgumentException;
 
+    // Spigot start
+    /**
+     * Same as the player method, but with an arbitrary string.
+     *
+     * @see #addPlayer(org.bukkit.OfflinePlayer)
+     */
+    void addEntry(String entry) throws IllegalStateException, IllegalArgumentException;
+    // Spigot end
+
     /**
      * Removes the player from this team.
      *
@@ -0,0 +0,0 @@ public interface Team {
      */
     boolean removePlayer(OfflinePlayer player) throws IllegalStateException, IllegalArgumentException;
 
+    // Spigot start
+    /**
+     * Same as the player method, but with an arbitrary string.
+     *
+     * @see #removePlayer(org.bukkit.OfflinePlayer)
+     */
+    boolean removeEntry(String entry) throws IllegalStateException, IllegalArgumentException;
+    // Spigot end
+
     /**
      * Unregisters this team from the Scoreboard
      *
@@ -0,0 +0,0 @@ public interface Team {
      * @throws IllegalStateException if this team has been unregistered
      */
     boolean hasPlayer(OfflinePlayer player) throws IllegalArgumentException, IllegalStateException;
+
+    // Spigot start
+    /**
+     * Same as the player method, but with an arbitrary string.
+     *
+     * @see #hasPlayer(org.bukkit.OfflinePlayer)
+     */
+    boolean hasEntry(String entry) throws IllegalArgumentException,IllegalStateException;
+    // Spigot end
 }
--