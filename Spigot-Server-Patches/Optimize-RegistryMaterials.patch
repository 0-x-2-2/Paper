From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sun, 26 Aug 2018 20:49:50 -0400
Subject: [PATCH] Optimize RegistryMaterials

Use larger initial sizes to increase bucket capacity on the BiMap

BiMap.get was seen to be using a good bit of CPU time.

diff --git a/src/main/java/net/minecraft/server/RegistryMaterials.java b/src/main/java/net/minecraft/server/RegistryMaterials.java
index 2aa6f89c18..1974baff83 100644
--- a/src/main/java/net/minecraft/server/RegistryMaterials.java
+++ b/src/main/java/net/minecraft/server/RegistryMaterials.java
@@ -0,0 +0,0 @@ import org.apache.logging.log4j.Logger;
 public class RegistryMaterials<V> implements IRegistry<V> {
 
     protected static final Logger a = LogManager.getLogger();
-    protected final RegistryID<V> b = new RegistryID(256);
-    protected final BiMap<MinecraftKey, V> c = HashBiMap.create();
+    protected final RegistryID<V> b = new RegistryID<>(2048); // Paper - use bigger expected size to reduce collisions
+    protected final BiMap<MinecraftKey, V> c = HashBiMap.create(2048); // Paper - use bigger expected size to reduce collisions
     protected Object[] d;
     private int x;
 
@@ -0,0 +0,0 @@ public class RegistryMaterials<V> implements IRegistry<V> {
             this.d = set.toArray(new Object[set.size()]);
         }
 
-        return this.d[random.nextInt(this.d.length)];
+        return (V) this.d[random.nextInt(this.d.length)]; // Paper - decompile fix
     }
 
     public boolean c(MinecraftKey minecraftkey) {
--