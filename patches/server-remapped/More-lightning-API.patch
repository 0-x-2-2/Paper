From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nassim Jahnke <nassim@njahnke.dev>
Date: Sun, 26 Jul 2020 14:44:09 +0200
Subject: [PATCH] More lightning API


diff --git a/src/main/java/net/minecraft/world/entity/LightningBolt.java b/src/main/java/net/minecraft/world/entity/LightningBolt.java
index 0000000000000000000000000000000000000000..0000000000000000000000000000000000000000 100644
--- a/src/main/java/net/minecraft/world/entity/LightningBolt.java
+++ b/src/main/java/net/minecraft/world/entity/LightningBolt.java
@@ -0,0 +0,0 @@ public class LightningBolt extends Entity {
 
     private int life;
     public long seed;
-    private int flashes;
+    private int flashes; public int getFlashCount() { return flashes; } public void setFlashCount(int flashes) { this.flashes = flashes; } // Paper - OBFHELPER
     public boolean visualOnly;
     @Nullable
     private ServerPlayer cause;
@@ -0,0 +0,0 @@ public class LightningBolt extends Entity {
         this.visualOnly = cosmetic;
     }
 
+    // Paper start
+    public int getLifeTicks() {
+        return life;
+    }
+
+    public void setLifeTicks(int lifeTicks) {
+        this.life = lifeTicks;
+    }
+    // Paper end
+
     @Override
     public SoundSource getSoundSource() {
         return SoundSource.WEATHER;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftLightningStrike.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftLightningStrike.java
index 0000000000000000000000000000000000000000..0000000000000000000000000000000000000000 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftLightningStrike.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftLightningStrike.java
@@ -0,0 +0,0 @@ public class CraftLightningStrike extends CraftEntity implements LightningStrike
         return spigot;
     }
     // Spigot end
+
+    // Paper start
+    @Override
+    public int getFlashCount() {
+        return getHandle().getFlashCount();
+    }
+
+    @Override
+    public void setFlashCount(int flashes) {
+        com.google.common.base.Preconditions.checkArgument(flashes >= 0, "Flashes has to be a positive number!");
+        getHandle().setFlashCount(flashes);
+    }
+
+    @Override
+    public int getLifeTicks() {
+        return getHandle().getLifeTicks();
+    }
+
+    @Override
+    public void setLifeTicks(int lifeTicks) {
+        getHandle().setLifeTicks(lifeTicks);
+    }
+    // Paper end
 }
