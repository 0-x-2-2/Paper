From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nassim Jahnke <nassim@njahnke.dev>
Date: Sat, 6 Jan 2024 14:18:58 +0100
Subject: [PATCH] Return null for empty String in NamespacedKey.fromString


diff --git a/src/main/java/org/bukkit/NamespacedKey.java b/src/main/java/org/bukkit/NamespacedKey.java
index 0000000000000000000000000000000000000000..0000000000000000000000000000000000000000 100644
--- a/src/main/java/org/bukkit/NamespacedKey.java
+++ b/src/main/java/org/bukkit/NamespacedKey.java
@@ -0,0 +0,0 @@ public final class NamespacedKey implements net.kyori.adventure.key.Key, com.des
         this.namespace = namespace;
         this.key = key;
 
-        String string = toString();
-        Preconditions.checkArgument(string.length() < 256, "NamespacedKey must be less than 256 characters", string);
     }
 
     /**
@@ -0,0 +0,0 @@ public final class NamespacedKey implements net.kyori.adventure.key.Key, com.des
         Preconditions.checkArgument(isValidNamespace(this.namespace), "Invalid namespace. Must be [a-z0-9._-]: %s", this.namespace);
         Preconditions.checkArgument(isValidKey(this.key), "Invalid key. Must be [a-z0-9/._-]: %s", this.key);
 
-        String string = toString();
-        Preconditions.checkArgument(string.length() < 256, "NamespacedKey must be less than 256 characters (%s)", string);
     }
 
     @NotNull
@@ -0,0 +0,0 @@ public final class NamespacedKey implements net.kyori.adventure.key.Key, com.des
      */
     @Nullable
     public static NamespacedKey fromString(@NotNull String string, @Nullable Plugin defaultNamespace) {
-        Preconditions.checkArgument(string != null && !string.isEmpty(), "Input string must not be empty or null");
+        // Paper - Return null for empty string
+        Preconditions.checkArgument(string != null, "Input string must not be null");
+        if (string.isEmpty()) return null;
+        // Paper end - Return null for empty string
 
         String[] components = string.split(":", 3);
         if (components.length > 2) {
diff --git a/src/test/java/org/bukkit/NamespacedKeyTest.java b/src/test/java/org/bukkit/NamespacedKeyTest.java
index 0000000000000000000000000000000000000000..0000000000000000000000000000000000000000 100644
--- a/src/test/java/org/bukkit/NamespacedKeyTest.java
+++ b/src/test/java/org/bukkit/NamespacedKeyTest.java
@@ -0,0 +0,0 @@ public class NamespacedKeyTest {
         assertNull(NamespacedKey.fromString("foo:bar:bazz"));
     }
 
+    @org.junit.jupiter.api.Disabled // Paper - Fixup NamespacedKey handling
     @Test
     public void testFromStringEmptyInput() {
         assertThrows(IllegalArgumentException.class, () -> NamespacedKey.fromString(""));
@@ -0,0 +0,0 @@ public class NamespacedKeyTest {
                 "loremipsumdolorsitametconsecteturadipiscingelitduisvolutpatvelitsitametmaximusscelerisquemorbiullamcorperexacconsequategestas").toString();
     }
 
+    @org.junit.jupiter.api.Disabled // Paper - Fixup NamespacedKey handling
     @Test
     public void testAboveLength() {
         assertThrows(IllegalArgumentException.class, () -> new NamespacedKey("loremipsumdolorsitametconsecteturadipiscingelitduisvolutpatvelitsitametmaximusscelerisquemorbiullamcorperexacconsequategestas",
