From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Tue, 18 May 2021 12:31:54 -0700
Subject: [PATCH] Add drops to shear events


diff --git a/src/main/java/org/bukkit/event/block/BlockShearEntityEvent.java b/src/main/java/org/bukkit/event/block/BlockShearEntityEvent.java
index 0000000000000000000000000000000000000000..0000000000000000000000000000000000000000 100644
--- a/src/main/java/org/bukkit/event/block/BlockShearEntityEvent.java
+++ b/src/main/java/org/bukkit/event/block/BlockShearEntityEvent.java
@@ -0,0 +0,0 @@ public class BlockShearEntityEvent extends BlockEvent implements Cancellable {
     private final Entity sheared;
     private final ItemStack tool;
     private boolean cancelled;
+    private java.util.List<ItemStack> drops; // Paper
 
-    public BlockShearEntityEvent(@NotNull Block dispenser, @NotNull Entity sheared, @NotNull ItemStack tool) {
+    @org.jetbrains.annotations.ApiStatus.Internal // Paper
+    public BlockShearEntityEvent(@NotNull Block dispenser, @NotNull Entity sheared, @NotNull ItemStack tool, final @NotNull java.util.List<ItemStack> drops) { // Paper - custom shear drops
         super(dispenser);
         this.sheared = sheared;
         this.tool = tool;
+        this.drops = drops; // Paper
     }
 
     /**
@@ -0,0 +0,0 @@ public class BlockShearEntityEvent extends BlockEvent implements Cancellable {
     public static HandlerList getHandlerList() {
         return handlers;
     }
+    // Paper start - custom shear drops
+    /**
+     * Get an immutable list of drops for this shearing.
+     *
+     * @return the shearing drops
+     * @see #setDrops(java.util.List)
+     */
+    public java.util.@NotNull @org.jetbrains.annotations.Unmodifiable List<ItemStack> getDrops() {
+        return java.util.Collections.unmodifiableList(this.drops);
+    }
+
+    /**
+     * Sets the drops for the shearing.
+     *
+     * @param drops the shear drops
+     */
+    public void setDrops(final java.util.@NotNull List<org.bukkit.inventory.ItemStack> drops) {
+        this.drops = java.util.List.copyOf(drops);
+    }
+    // Paper end - custom shear drops
 }
diff --git a/src/main/java/org/bukkit/event/player/PlayerShearEntityEvent.java b/src/main/java/org/bukkit/event/player/PlayerShearEntityEvent.java
index 0000000000000000000000000000000000000000..0000000000000000000000000000000000000000 100644
--- a/src/main/java/org/bukkit/event/player/PlayerShearEntityEvent.java
+++ b/src/main/java/org/bukkit/event/player/PlayerShearEntityEvent.java
@@ -0,0 +0,0 @@ public class PlayerShearEntityEvent extends PlayerEvent implements Cancellable {
     private final Entity what;
     private final ItemStack item;
     private final EquipmentSlot hand;
+    private java.util.List<ItemStack> drops; // Paper - custom shear drops
 
-    public PlayerShearEntityEvent(@NotNull Player who, @NotNull Entity what, @NotNull ItemStack item, @NotNull EquipmentSlot hand) {
+    @org.jetbrains.annotations.ApiStatus.Internal // Paper
+    public PlayerShearEntityEvent(@NotNull Player who, @NotNull Entity what, @NotNull ItemStack item, @NotNull EquipmentSlot hand, final java.util.@NotNull List<ItemStack> drops) { // Paper - custom shear drops
         super(who);
         this.what = what;
         this.item = item;
         this.hand = hand;
+        this.drops = drops; // Paper - custom shear drops
     }
 
     @Deprecated(since = "1.15.2")
     public PlayerShearEntityEvent(@NotNull final Player who, @NotNull final Entity what) {
-        this(who, what, new ItemStack(Material.SHEARS), EquipmentSlot.HAND);
+        this(who, what, new ItemStack(Material.SHEARS), EquipmentSlot.HAND, java.util.Collections.emptyList()); // Paper - custom shear drops
     }
 
     @Override
@@ -0,0 +0,0 @@ public class PlayerShearEntityEvent extends PlayerEvent implements Cancellable {
         return handlers;
     }
 
+    // Paper start - custom shear drops
+    /**
+     * Get an immutable list of drops for this shearing.
+     *
+     * @return the shearing drops
+     * @see #setDrops(java.util.List)
+     */
+    public java.util.@NotNull @org.jetbrains.annotations.Unmodifiable List<ItemStack> getDrops() {
+        return this.drops;
+    }
+
+    /**
+     * Sets the drops for the shearing.
+     *
+     * @param drops the shear drops
+     */
+    public void setDrops(final java.util.@NotNull List<org.bukkit.inventory.ItemStack> drops) {
+        this.drops = java.util.List.copyOf(drops);
+    }
+    // Paper end - custom shear drops
 }
