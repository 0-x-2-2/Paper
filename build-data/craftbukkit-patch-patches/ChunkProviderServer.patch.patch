--- a/net/minecraft/server/level/ChunkProviderServer.patch
+++ b/net/minecraft/server/level/ChunkProviderServer.patch
@@ -0,0 +0,0 @@
 +        return playerchunk == null || playerchunk.oldTicketLevel > i; // CraftBukkit using oldTicketLevel for isLoaded checks
      }
  
-     public boolean isLoaded(int i, int j) {
-@@ -0,0 +0,0 @@
+     @Override
+@@ -0,0 +0,0 @@
      public boolean a(Entity entity) {
          long i = ChunkCoordIntPair.pair(MathHelper.floor(entity.locX()) >> 4, MathHelper.floor(entity.locZ()) >> 4);
  
@@ -0,0 +0,0 @@
      }
  
      private boolean a(long i, Function<PlayerChunk, CompletableFuture<Either<Chunk, PlayerChunk.Failure>>> function) {
-@@ -0,0 +0,0 @@
+@@ -0,0 +0,0 @@
  
      @Override
      public void close() throws IOException {
@@ -0,0 +0,0 @@
      public void tick(BooleanSupplier booleansupplier) {
          this.world.getMethodProfiler().enter("purge");
          this.chunkMapDistance.purgeTickets();
-@@ -0,0 +0,0 @@
+@@ -0,0 +0,0 @@
          this.lastTickTime = i;
          WorldData worlddata = this.world.getWorldData();
          boolean flag = this.world.isDebugWorld();
@@ -0,0 +0,0 @@
  
              this.world.getMethodProfiler().enter("naturalSpawnCount");
              int l = this.chunkMapDistance.b();
-@@ -0,0 +0,0 @@
+@@ -0,0 +0,0 @@
  
          @Override
          protected boolean executeNext() {
