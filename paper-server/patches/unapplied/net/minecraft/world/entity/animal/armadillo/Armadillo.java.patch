--- a/net/minecraft/world/entity/animal/armadillo/Armadillo.java
+++ b/net/minecraft/world/entity/animal/armadillo/Armadillo.java
@@ -47,6 +47,9 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.level.storage.loot.BuiltInLootTables;
+// CraftBukkit start
+import org.bukkit.event.entity.EntityDamageEvent;
+// CraftBukkit end
 
 public class Armadillo extends Animal {
 
@@ -135,16 +138,18 @@
         ProfilerFiller gameprofilerfiller = Profiler.get();
 
         gameprofilerfiller.push("armadilloBrain");
-        this.brain.tick(world, this);
+        ((Brain<Armadillo>) this.brain).tick(world, this); // CraftBukkit - decompile error
         gameprofilerfiller.pop();
         gameprofilerfiller.push("armadilloActivityUpdate");
         ArmadilloAi.updateActivity(this);
         gameprofilerfiller.pop();
         if (this.isAlive() && !this.isBaby() && --this.scuteTime <= 0) {
+            this.forceDrops = true; // CraftBukkit
             if (this.dropFromGiftLootTable(world, BuiltInLootTables.ARMADILLO_SHED, this::spawnAtLocation)) {
                 this.playSound(SoundEvents.ARMADILLO_SCUTE_DROP, 1.0F, (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F);
                 this.gameEvent(GameEvent.ENTITY_PLACE);
             }
+            this.forceDrops = false; // CraftBukkit
 
             this.scuteTime = this.pickNextScuteDropTime();
         }
@@ -291,19 +296,25 @@
     }
 
     @Override
-    protected void actuallyHurt(ServerLevel world, DamageSource source, float amount) {
-        super.actuallyHurt(world, source, amount);
+    // CraftBukkit start - void -> boolean
+    public boolean actuallyHurt(ServerLevel worldserver, DamageSource damagesource, float f, EntityDamageEvent event) {
+        boolean damageResult = super.actuallyHurt(worldserver, damagesource, f, event);
+        if (!damageResult) {
+            return false;
+        }
+        // CraftBukkit end
         if (!this.isNoAi() && !this.isDeadOrDying()) {
-            if (source.getEntity() instanceof LivingEntity) {
+            if (damagesource.getEntity() instanceof LivingEntity) {
                 this.getBrain().setMemoryWithExpiry(MemoryModuleType.DANGER_DETECTED_RECENTLY, true, 80L);
                 if (this.canStayRolledUp()) {
                     this.rollUp();
                 }
-            } else if (source.is(DamageTypeTags.PANIC_ENVIRONMENTAL_CAUSES)) {
+            } else if (damagesource.is(DamageTypeTags.PANIC_ENVIRONMENTAL_CAUSES)) {
                 this.rollOut();
             }
 
         }
+        return true; // CraftBukkit
     }
 
     @Override
@@ -327,7 +338,9 @@
             if (world instanceof ServerLevel) {
                 ServerLevel worldserver = (ServerLevel) world;
 
+                this.forceDrops = true; // CraftBukkit
                 this.spawnAtLocation(worldserver, new ItemStack(Items.ARMADILLO_SCUTE));
+                this.forceDrops = false; // CraftBukkit
                 this.gameEvent(GameEvent.ENTITY_INTERACT);
                 this.playSound(SoundEvents.ARMADILLO_BRUSH);
             }
@@ -431,7 +444,7 @@
         }
 
         public static Armadillo.ArmadilloState fromName(String name) {
-            return (Armadillo.ArmadilloState) Armadillo.ArmadilloState.CODEC.byName(name, (Enum) Armadillo.ArmadilloState.IDLE);
+            return (Armadillo.ArmadilloState) Armadillo.ArmadilloState.CODEC.byName(name, Armadillo.ArmadilloState.IDLE); // CraftBukkit - decompile error
         }
 
         @Override
