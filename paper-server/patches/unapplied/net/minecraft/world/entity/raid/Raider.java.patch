--- a/net/minecraft/world/entity/raid/Raider.java
+++ b/net/minecraft/world/entity/raid/Raider.java
@@ -40,6 +40,9 @@
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.pathfinder.Path;
 import net.minecraft.world.phys.Vec3;
+// CraftBukkit start
+import org.bukkit.event.entity.EntityRemoveEvent;
+// CraftBukkit end
 
 public abstract class Raider extends PatrollingMonster {
 
@@ -225,18 +228,25 @@
         boolean flag = this.hasActiveRaid() && this.getCurrentRaid().getLeader(this.getWave()) != null;
 
         if (this.hasActiveRaid() && !flag && ItemStack.matches(itemstack, Raid.getOminousBannerInstance(this.registryAccess().lookupOrThrow(Registries.BANNER_PATTERN)))) {
+            // Paper start - EntityPickupItemEvent fixes
+            if (org.bukkit.craftbukkit.event.CraftEventFactory.callEntityPickupItemEvent(this, itemEntity, 0, false).isCancelled()) {
+                return;
+            }
+            // Paper end - EntityPickupItemEvent fixes
             EquipmentSlot enumitemslot = EquipmentSlot.HEAD;
             ItemStack itemstack1 = this.getItemBySlot(enumitemslot);
             double d0 = (double) this.getEquipmentDropChance(enumitemslot);
 
             if (!itemstack1.isEmpty() && (double) Math.max(this.random.nextFloat() - 0.1F, 0.0F) < d0) {
+                this.forceDrops = true; // Paper - Add missing forceDrop toggles
                 this.spawnAtLocation(world, itemstack1);
+                this.forceDrops = false; // Paper - Add missing forceDrop toggles
             }
 
             this.onItemPickup(itemEntity);
             this.setItemSlot(enumitemslot, itemstack);
             this.take(itemEntity, itemstack.getCount());
-            itemEntity.discard();
+            itemEntity.discard(EntityRemoveEvent.Cause.PICKUP); // CraftBukkit - add Bukkit remove cause
             this.getCurrentRaid().setLeader(this.getWave(), this);
             this.setPatrolLeader(true);
         } else {
@@ -290,7 +300,7 @@
         @Nullable
         private ItemEntity pursuedBannerItemEntity;
 
-        public ObtainRaidLeaderBannerGoal(final Raider entityraider) {
+        public ObtainRaidLeaderBannerGoal(final T entityraider) { // CraftBukkit - decompile error
             this.mob = entityraider;
             this.setFlags(EnumSet.of(Goal.Flag.MOVE));
         }
@@ -335,6 +345,7 @@
         }
 
         private boolean cannotPickUpBanner() {
+            if (!getServerLevel(this.mob).getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_MOBGRIEFING) || !this.mob.canPickUpLoot()) return false; // Paper - respect game and entity rules for picking up items
             if (!this.mob.hasActiveRaid()) {
                 return true;
             } else if (this.mob.getCurrentRaid().isOver()) {
@@ -518,7 +529,7 @@
         }
     }
 
-    protected static class HoldGroundAttackGoal extends Goal {
+    public static class HoldGroundAttackGoal extends Goal {
 
         private final Raider mob;
         private final float hostileRadiusSqr;
@@ -547,7 +558,7 @@
             while (iterator.hasNext()) {
                 Raider entityraider = (Raider) iterator.next();
 
-                entityraider.setTarget(this.mob.getTarget());
+                entityraider.setTarget(this.mob.getTarget(), org.bukkit.event.entity.EntityTargetEvent.TargetReason.FOLLOW_LEADER, true); // CraftBukkit
             }
 
         }
@@ -564,7 +575,7 @@
                 while (iterator.hasNext()) {
                     Raider entityraider = (Raider) iterator.next();
 
-                    entityraider.setTarget(entityliving);
+                    entityraider.setTarget(this.mob.getTarget(), org.bukkit.event.entity.EntityTargetEvent.TargetReason.FOLLOW_LEADER, true); // CraftBukkit
                     entityraider.setAggressive(true);
                 }
 
