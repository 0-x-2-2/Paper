--- a/net/minecraft/world/inventory/BrewingStandMenu.java
+++ b/net/minecraft/world/inventory/BrewingStandMenu.java
@@ -16,6 +16,10 @@
 import net.minecraft.world.item.alchemy.Potion;
 import net.minecraft.world.item.alchemy.PotionBrewing;
 import net.minecraft.world.item.alchemy.PotionContents;
+// CraftBukkit start
+import org.bukkit.craftbukkit.inventory.CraftInventoryBrewer;
+import org.bukkit.craftbukkit.inventory.view.CraftBrewingStandView;
+// CraftBukkit end
 
 public class BrewingStandMenu extends AbstractContainerMenu {
 
@@ -35,29 +39,51 @@
     public final ContainerData brewingStandData;
     private final Slot ingredientSlot;
 
+    // CraftBukkit start
+    private CraftBrewingStandView bukkitEntity = null;
+    private Inventory player;
+    // CraftBukkit end
+
     public BrewingStandMenu(int syncId, Inventory playerInventory) {
-        this(syncId, playerInventory, new SimpleContainer(5), new SimpleContainerData(2));
+        this(syncId, playerInventory, new SimpleContainer(5), new io.papermc.paper.inventory.BrewingSimpleContainerData()); // Paper - Add totalBrewTime
     }
 
     public BrewingStandMenu(int syncId, Inventory playerInventory, Container inventory, ContainerData propertyDelegate) {
         super(MenuType.BREWING_STAND, syncId);
+        this.player = playerInventory; // CraftBukkit
         checkContainerSize(inventory, 5);
-        checkContainerDataCount(propertyDelegate, 2);
+        checkContainerDataCount(propertyDelegate, 3); // Paper - Add recipeBrewTime
         this.brewingStand = inventory;
         this.brewingStandData = propertyDelegate;
         PotionBrewing potionbrewer = playerInventory.player.level().potionBrewing();
 
-        this.addSlot(new BrewingStandMenu.PotionSlot(inventory, 0, 56, 51));
-        this.addSlot(new BrewingStandMenu.PotionSlot(inventory, 1, 79, 58));
-        this.addSlot(new BrewingStandMenu.PotionSlot(inventory, 2, 102, 51));
+        // Paper start - custom potion mixes
+        this.addSlot(new BrewingStandMenu.PotionSlot(inventory, 0, 56, 51, potionbrewer));
+        this.addSlot(new BrewingStandMenu.PotionSlot(inventory, 1, 79, 58, potionbrewer));
+        this.addSlot(new BrewingStandMenu.PotionSlot(inventory, 2, 102, 51, potionbrewer));
+        // Paper end - custom potion mixes
         this.ingredientSlot = this.addSlot(new BrewingStandMenu.IngredientsSlot(potionbrewer, inventory, 3, 79, 17));
         this.addSlot(new BrewingStandMenu.FuelSlot(inventory, 4, 17, 17));
-        this.addDataSlots(propertyDelegate);
+        // Paper start - Add recipeBrewTime
+        this.addDataSlots(new SimpleContainerData(2) {
+            @Override
+            public int get(final int index) {
+                if (index == 0) return 400 * propertyDelegate.get(index) / propertyDelegate.get(2);
+                return propertyDelegate.get(index);
+            }
+
+            @Override
+            public void set(final int index, final int value) {
+                propertyDelegate.set(index, value);
+            }
+        });
+        // Paper end - Add recipeBrewTime
         this.addStandardInventorySlots(playerInventory, 8, 84);
     }
 
     @Override
     public boolean stillValid(Player player) {
+        if (!this.checkReachable) return true; // CraftBukkit
         return this.brewingStand.stillValid(player);
     }
 
@@ -79,7 +105,7 @@
                     if (!this.moveItemStackTo(itemstack1, 3, 4, false)) {
                         return ItemStack.EMPTY;
                     }
-                } else if (BrewingStandMenu.PotionSlot.mayPlaceItem(itemstack)) {
+                } else if (BrewingStandMenu.PotionSlot.mayPlaceItem(itemstack, this.player.player.level().potionBrewing())) { // Paper - custom potion mixes
                     if (!this.moveItemStackTo(itemstack1, 0, 3, false)) {
                         return ItemStack.EMPTY;
                     }
@@ -128,13 +154,15 @@
 
     private static class PotionSlot extends Slot {
 
-        public PotionSlot(Container inventory, int index, int x, int y) {
+        private final PotionBrewing potionBrewing; // Paper - custom potion mixes
+        public PotionSlot(Container inventory, int index, int x, int y, PotionBrewing potionBrewing) { // Paper - custom potion mixes
             super(inventory, index, x, y);
+            this.potionBrewing = potionBrewing; // Paper - custom potion mixes
         }
 
         @Override
         public boolean mayPlace(ItemStack stack) {
-            return PotionSlot.mayPlaceItem(stack);
+            return PotionSlot.mayPlaceItem(stack, this.potionBrewing); // Paper - custom potion mixes
         }
 
         @Override
@@ -153,8 +181,8 @@
             super.onTake(player, stack);
         }
 
-        public static boolean mayPlaceItem(ItemStack stack) {
-            return stack.is(Items.POTION) || stack.is(Items.SPLASH_POTION) || stack.is(Items.LINGERING_POTION) || stack.is(Items.GLASS_BOTTLE);
+        public static boolean mayPlaceItem(ItemStack stack, PotionBrewing potionBrewing) { // Paper - custom potion mixes
+            return stack.is(Items.POTION) || stack.is(Items.SPLASH_POTION) || stack.is(Items.LINGERING_POTION) || stack.is(Items.GLASS_BOTTLE) || potionBrewing.isCustomInput(stack); // Paper - Custom Potion Mixes
         }
 
         @Override
@@ -198,4 +226,17 @@
             return BrewingStandMenu.EMPTY_SLOT_FUEL;
         }
     }
+
+    // CraftBukkit start
+    @Override
+    public CraftBrewingStandView getBukkitView() {
+        if (this.bukkitEntity != null) {
+            return this.bukkitEntity;
+        }
+
+        CraftInventoryBrewer inventory = new CraftInventoryBrewer(this.brewingStand);
+        this.bukkitEntity = new CraftBrewingStandView(this.player.player.getBukkitEntity(), inventory, this);
+        return this.bukkitEntity;
+    }
+    // CraftBukkit end
 }
