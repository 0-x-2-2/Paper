--- a/net/minecraft/world/entity/animal/horse/SkeletonTrapGoal.java
+++ b/net/minecraft/world/entity/animal/horse/SkeletonTrapGoal.java
@@ -20,6 +20,7 @@
 public class SkeletonTrapGoal extends Goal {
 
     private final SkeletonHorse horse;
+    private java.util.List<org.bukkit.entity.HumanEntity> eligiblePlayers; // Paper
 
     public SkeletonTrapGoal(SkeletonHorse skeletonHorse) {
         this.horse = skeletonHorse;
@@ -27,12 +28,13 @@
 
     @Override
     public boolean canUse() {
-        return this.horse.level().hasNearbyAlivePlayer(this.horse.getX(), this.horse.getY(), this.horse.getZ(), 10.0D);
+        return !(eligiblePlayers = this.horse.level().findNearbyBukkitPlayers(this.horse.getX(), this.horse.getY(), this.horse.getZ(), 10.0D, net.minecraft.world.entity.EntitySelector.PLAYER_AFFECTS_SPAWNING)).isEmpty(); // Paper - Affects Spawning API & SkeletonHorseTrapEvent
     }
 
     @Override
     public void tick() {
         ServerLevel worldserver = (ServerLevel) this.horse.level();
+        if (!new com.destroystokyo.paper.event.entity.SkeletonHorseTrapEvent((org.bukkit.entity.SkeletonHorse) this.horse.getBukkitEntity(), eligiblePlayers).callEvent()) return; // Paper
         DifficultyInstance difficultydamagescaler = worldserver.getCurrentDifficultyAt(this.horse.blockPosition());
 
         this.horse.setTrap(false);
@@ -43,12 +45,12 @@
         if (entitylightning != null) {
             entitylightning.moveTo(this.horse.getX(), this.horse.getY(), this.horse.getZ());
             entitylightning.setVisualOnly(true);
-            worldserver.addFreshEntity(entitylightning);
+            worldserver.strikeLightning(entitylightning, org.bukkit.event.weather.LightningStrikeEvent.Cause.TRAP); // CraftBukkit
             Skeleton entityskeleton = this.createSkeleton(difficultydamagescaler, this.horse);
 
             if (entityskeleton != null) {
                 entityskeleton.startRiding(this.horse);
-                worldserver.addFreshEntityWithPassengers(entityskeleton);
+                worldserver.addFreshEntityWithPassengers(entityskeleton, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.TRAP); // CraftBukkit
 
                 for (int i = 0; i < 3; ++i) {
                     AbstractHorse entityhorseabstract = this.createHorse(difficultydamagescaler);
@@ -59,7 +61,7 @@
                         if (entityskeleton1 != null) {
                             entityskeleton1.startRiding(entityhorseabstract);
                             entityhorseabstract.push(this.horse.getRandom().triangle(0.0D, 1.1485D), 0.0D, this.horse.getRandom().triangle(0.0D, 1.1485D));
-                            worldserver.addFreshEntityWithPassengers(entityhorseabstract);
+                            worldserver.addFreshEntityWithPassengers(entityhorseabstract, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.JOCKEY); // CraftBukkit
                         }
                     }
                 }
