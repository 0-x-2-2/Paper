--- a/net/minecraft/world/level/block/entity/BellBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/BellBlockEntity.java
@@ -63,6 +63,11 @@
 
         if (blockEntity.ticks >= 50) {
             blockEntity.shaking = false;
+            // Paper start - Fix bell block entity memory leak
+            if (!blockEntity.resonating) {
+                blockEntity.nearbyEntities.clear();
+            }
+            // Paper end - Fix bell block entity memory leak
             blockEntity.ticks = 0;
         }
 
@@ -76,6 +81,7 @@
                 ++blockEntity.resonationTicks;
             } else {
                 bellEffect.run(world, pos, blockEntity.nearbyEntities);
+                blockEntity.nearbyEntities.clear(); // Paper - Fix bell block entity memory leak
                 blockEntity.resonating = false;
             }
         }
@@ -120,11 +126,12 @@
                 LivingEntity entityliving = (LivingEntity) iterator.next();
 
                 if (entityliving.isAlive() && !entityliving.isRemoved() && blockposition.closerToCenterThan(entityliving.position(), 32.0D)) {
-                    entityliving.getBrain().setMemory(MemoryModuleType.HEARD_BELL_TIME, (Object) this.level.getGameTime());
+                    entityliving.getBrain().setMemory(MemoryModuleType.HEARD_BELL_TIME, this.level.getGameTime()); // CraftBukkit - decompile error
                 }
             }
         }
 
+        this.nearbyEntities.removeIf(e -> !e.isAlive()); // Paper - Fix bell block entity memory leak
     }
 
     private static boolean areRaidersNearby(BlockPos pos, List<LivingEntity> hearingEntities) {
@@ -144,9 +151,13 @@
     }
 
     private static void makeRaidersGlow(Level world, BlockPos pos, List<LivingEntity> hearingEntities) {
+        List<org.bukkit.entity.LivingEntity> entities = // CraftBukkit
         hearingEntities.stream().filter((entityliving) -> {
             return BellBlockEntity.isRaiderWithinRange(pos, entityliving);
-        }).forEach(BellBlockEntity::glow);
+        }).map((entity) -> (org.bukkit.entity.LivingEntity) entity.getBukkitEntity()).collect(java.util.stream.Collectors.toCollection(java.util.ArrayList::new)); // CraftBukkit
+
+        org.bukkit.craftbukkit.event.CraftEventFactory.handleBellResonateEvent(world, pos, entities).forEach(BellBlockEntity::glow);
+        // CraftBukkit end
     }
 
     private static void showBellParticles(Level world, BlockPos pos, List<LivingEntity> hearingEntities) {
