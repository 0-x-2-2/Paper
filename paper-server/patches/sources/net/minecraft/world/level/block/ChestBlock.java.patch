--- a/net/minecraft/world/level/block/ChestBlock.java
+++ b/net/minecraft/world/level/block/ChestBlock.java
@@ -91,24 +91,7 @@
         public Optional<MenuProvider> acceptDouble(final ChestBlockEntity first, final ChestBlockEntity second) {
             final CompoundContainer inventorylargechest = new CompoundContainer(first, second);
 
-            return Optional.of(new MenuProvider(this) {
-                @Nullable
-                @Override
-                public AbstractContainerMenu createMenu(int syncId, Inventory playerInventory, Player player) {
-                    if (first.canOpen(player) && second.canOpen(player)) {
-                        first.unpackLootTable(playerInventory.player);
-                        second.unpackLootTable(playerInventory.player);
-                        return ChestMenu.sixRows(syncId, playerInventory, inventorylargechest);
-                    } else {
-                        return null;
-                    }
-                }
-
-                @Override
-                public Component getDisplayName() {
-                    return (Component) (first.hasCustomName() ? first.getDisplayName() : (second.hasCustomName() ? second.getDisplayName() : Component.translatable("container.chestDouble")));
-                }
-            });
+            return Optional.of(new DoubleInventory(first, second, inventorylargechest)); // CraftBukkit // CraftBukkit - decompile error
         }
 
         public Optional<MenuProvider> acceptSingle(ChestBlockEntity single) {
@@ -118,8 +101,40 @@
         @Override
         public Optional<MenuProvider> acceptNone() {
             return Optional.empty();
+        }
+    };
+
+    // CraftBukkit start
+    public static class DoubleInventory implements MenuProvider {
+
+        private final ChestBlockEntity tileentitychest;
+        private final ChestBlockEntity tileentitychest1;
+        public final CompoundContainer inventorylargechest;
+
+        public DoubleInventory(ChestBlockEntity tileentitychest, ChestBlockEntity tileentitychest1, CompoundContainer inventorylargechest) {
+            this.tileentitychest = tileentitychest;
+            this.tileentitychest1 = tileentitychest1;
+            this.inventorylargechest = inventorylargechest;
+        }
+
+        @Nullable
+        @Override
+        public AbstractContainerMenu createMenu(int syncId, Inventory playerInventory, Player player) {
+            if (this.tileentitychest.canOpen(player) && this.tileentitychest1.canOpen(player)) {
+                this.tileentitychest.unpackLootTable(playerInventory.player);
+                this.tileentitychest1.unpackLootTable(playerInventory.player);
+                return ChestMenu.sixRows(syncId, playerInventory, this.inventorylargechest);
+            } else {
+                return null;
+            }
+        }
+
+        @Override
+        public Component getDisplayName() {
+            return (Component) (this.tileentitychest.hasCustomName() ? this.tileentitychest.getDisplayName() : (this.tileentitychest1.hasCustomName() ? this.tileentitychest1.getDisplayName() : Component.translatable("container.chestDouble")));
         }
     };
+    // CraftBukkit end
 
     @Override
     public MapCodec<? extends ChestBlock> codec() {
@@ -257,7 +272,7 @@
 
     @Override
     public DoubleBlockCombiner.NeighborCombineResult<? extends ChestBlockEntity> combine(BlockState state, Level world, BlockPos pos, boolean ignoreBlocked) {
-        BiPredicate bipredicate;
+        BiPredicate<LevelAccessor, BlockPos> bipredicate; // CraftBukkit - decompile error
 
         if (ignoreBlocked) {
             bipredicate = (generatoraccess, blockposition1) -> {
@@ -273,9 +288,16 @@
     @Nullable
     @Override
     public MenuProvider getMenuProvider(BlockState state, Level world, BlockPos pos) {
-        return (MenuProvider) ((Optional) this.combine(state, world, pos, false).apply(ChestBlock.MENU_PROVIDER_COMBINER)).orElse((Object) null);
+        // CraftBukkit start
+        return this.getMenuProvider(state, world, pos, false);
     }
 
+    @Nullable
+    public MenuProvider getMenuProvider(BlockState iblockdata, Level world, BlockPos blockposition, boolean ignoreObstructions) {
+        return (MenuProvider) ((Optional) this.combine(iblockdata, world, blockposition, ignoreObstructions).apply(ChestBlock.MENU_PROVIDER_COMBINER)).orElse((Object) null);
+        // CraftBukkit end
+    }
+
     public static DoubleBlockCombiner.Combiner<ChestBlockEntity, Float2FloatFunction> opennessCombiner(final LidBlockEntity progress) {
         return new DoubleBlockCombiner.Combiner<ChestBlockEntity, Float2FloatFunction>() {
             public Float2FloatFunction acceptDouble(ChestBlockEntity first, ChestBlockEntity second) {
