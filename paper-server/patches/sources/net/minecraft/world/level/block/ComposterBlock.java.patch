--- a/net/minecraft/world/level/block/ComposterBlock.java
+++ b/net/minecraft/world/level/block/ComposterBlock.java
@@ -41,6 +41,10 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
+// CraftBukkit start
+import org.bukkit.craftbukkit.inventory.CraftBlockInventoryHolder;
+import org.bukkit.craftbukkit.util.DummyGeneratorAccess;
+// CraftBukkit end
 
 public class ComposterBlock extends Block implements WorldlyContainerHolder {
 
@@ -241,6 +245,11 @@
         if (i < 8 && ComposterBlock.COMPOSTABLES.containsKey(stack.getItem())) {
             if (i < 7 && !world.isClientSide) {
                 BlockState iblockdata1 = ComposterBlock.addItem(player, state, world, pos, stack);
+                // Paper start - handle cancelled events
+                if (iblockdata1 == null) {
+                    return InteractionResult.PASS;
+                }
+                // Paper end
 
                 world.levelEvent(1500, pos, state != iblockdata1 ? 1 : 0);
                 player.awardStat(Stats.ITEM_USED.get(stack.getItem()));
@@ -269,7 +278,19 @@
         int i = (Integer) state.getValue(ComposterBlock.LEVEL);
 
         if (i < 7 && ComposterBlock.COMPOSTABLES.containsKey(stack.getItem())) {
-            BlockState iblockdata1 = ComposterBlock.addItem(user, state, world, pos, stack);
+            // CraftBukkit start
+            double rand = world.getRandom().nextDouble();
+            BlockState iblockdata1 = null; // Paper
+            if (false && (state == iblockdata1 || !org.bukkit.craftbukkit.event.CraftEventFactory.callEntityChangeBlockEvent(user, pos, iblockdata1))) { // Paper - move event call into addItem
+                return state;
+            }
+            iblockdata1 = ComposterBlock.addItem(user, state, world, pos, stack, rand);
+            // Paper start - handle cancelled events
+            if (iblockdata1 == null) {
+                return state;
+            }
+            // Paper end
+            // CraftBukkit end
 
             stack.shrink(1);
             return iblockdata1;
@@ -279,6 +300,14 @@
     }
 
     public static BlockState extractProduce(Entity user, BlockState state, Level world, BlockPos pos) {
+        // CraftBukkit start
+        if (user != null && !(user instanceof Player)) {
+            BlockState iblockdata1 = ComposterBlock.empty(user, state, DummyGeneratorAccess.INSTANCE, pos);
+            if (!org.bukkit.craftbukkit.event.CraftEventFactory.callEntityChangeBlockEvent(user, pos, iblockdata1)) {
+                return state;
+            }
+        }
+        // CraftBukkit end
         if (!world.isClientSide) {
             Vec3 vec3d = Vec3.atLowerCornerWithOffset(pos, 0.5D, 1.01D, 0.5D).offsetRandom(world.random, 0.7F);
             ItemEntity entityitem = new ItemEntity(world, vec3d.x(), vec3d.y(), vec3d.z(), new ItemStack(Items.BONE_MEAL));
@@ -301,20 +330,47 @@
         return iblockdata1;
     }
 
+    @Nullable // Paper
     static BlockState addItem(@Nullable Entity user, BlockState state, LevelAccessor world, BlockPos pos, ItemStack stack) {
-        int i = (Integer) state.getValue(ComposterBlock.LEVEL);
-        float f = ComposterBlock.COMPOSTABLES.getFloat(stack.getItem());
+        // CraftBukkit start
+        return ComposterBlock.addItem(user, state, world, pos, stack, world.getRandom().nextDouble());
+    }
 
-        if ((i != 0 || f <= 0.0F) && world.getRandom().nextDouble() >= (double) f) {
-            return state;
-        } else {
-            int j = i + 1;
-            BlockState iblockdata1 = (BlockState) state.setValue(ComposterBlock.LEVEL, j);
+    @Nullable // Paper - make it nullable
+    static BlockState addItem(@Nullable Entity entity, BlockState iblockdata, LevelAccessor generatoraccess, BlockPos blockposition, ItemStack itemstack, double rand) {
+        // CraftBukkit end
+        int i = (Integer) iblockdata.getValue(ComposterBlock.LEVEL);
+        float f = ComposterBlock.COMPOSTABLES.getFloat(itemstack.getItem());
 
-            world.setBlock(pos, iblockdata1, 3);
-            world.gameEvent((Holder) GameEvent.BLOCK_CHANGE, pos, GameEvent.Context.of(user, iblockdata1));
+        // Paper start - Add CompostItemEvent and EntityCompostItemEvent
+        boolean willRaiseLevel = !((i != 0 || f <= 0.0F) && rand >= (double) f);
+        final io.papermc.paper.event.block.CompostItemEvent event;
+        if (entity == null) {
+            event = new io.papermc.paper.event.block.CompostItemEvent(org.bukkit.craftbukkit.block.CraftBlock.at(generatoraccess, blockposition), itemstack.getBukkitStack(), willRaiseLevel);
+        } else {
+            event = new io.papermc.paper.event.entity.EntityCompostItemEvent(entity.getBukkitEntity(), org.bukkit.craftbukkit.block.CraftBlock.at(generatoraccess, blockposition), itemstack.getBukkitStack(), willRaiseLevel);
+        }
+        if (!event.callEvent()) { // check for cancellation of entity event (non entity event can't be cancelled cause of hoppers)
+            return null;
+        }
+        willRaiseLevel = event.willRaiseLevel();
+
+        if (!willRaiseLevel) {
+            // Paper end - Add CompostItemEvent and EntityCompostItemEvent
+            return iblockdata;
+        } else {
+            int j = i + 1;
+            BlockState iblockdata1 = (BlockState) iblockdata.setValue(ComposterBlock.LEVEL, j);
+            // Paper start - move the EntityChangeBlockEvent here to avoid conflict later for the compost events
+            if (entity != null && !org.bukkit.craftbukkit.event.CraftEventFactory.callEntityChangeBlockEvent(entity, blockposition, iblockdata1)) {
+                return null;
+            }
+            // Paper end
+
+            generatoraccess.setBlock(blockposition, iblockdata1, 3);
+            generatoraccess.gameEvent((Holder) GameEvent.BLOCK_CHANGE, blockposition, GameEvent.Context.of(entity, iblockdata1));
             if (j == 7) {
-                world.scheduleTick(pos, state.getBlock(), 20);
+                generatoraccess.scheduleTick(blockposition, iblockdata.getBlock(), 20);
             }
 
             return iblockdata1;
@@ -354,7 +410,8 @@
     public WorldlyContainer getContainer(BlockState state, LevelAccessor world, BlockPos pos) {
         int i = (Integer) state.getValue(ComposterBlock.LEVEL);
 
-        return (WorldlyContainer) (i == 8 ? new ComposterBlock.OutputContainer(state, world, pos, new ItemStack(Items.BONE_MEAL)) : (i < 7 ? new ComposterBlock.InputContainer(state, world, pos) : new ComposterBlock.EmptyContainer()));
+        // CraftBukkit - empty generatoraccess, blockposition
+        return (WorldlyContainer) (i == 8 ? new ComposterBlock.OutputContainer(state, world, pos, new ItemStack(Items.BONE_MEAL)) : (i < 7 ? new ComposterBlock.InputContainer(state, world, pos) : new ComposterBlock.EmptyContainer(world, pos)));
     }
 
     public static class OutputContainer extends SimpleContainer implements WorldlyContainer {
@@ -369,6 +426,7 @@
             this.state = state;
             this.level = world;
             this.pos = pos;
+            this.bukkitOwner = new CraftBlockInventoryHolder(world, pos, this); // CraftBukkit
         }
 
         @Override
@@ -393,8 +451,15 @@
 
         @Override
         public void setChanged() {
+            // CraftBukkit start - allow putting items back (eg cancelled InventoryMoveItemEvent)
+            if (this.isEmpty()) {
             ComposterBlock.empty((Entity) null, this.state, this.level, this.pos);
             this.changed = true;
+            } else {
+                this.level.setBlock(this.pos, this.state, 3);
+                this.changed = false;
+            }
+            // CraftBukkit end
         }
     }
 
@@ -407,6 +472,7 @@
 
         public InputContainer(BlockState state, LevelAccessor world, BlockPos pos) {
             super(1);
+            this.bukkitOwner = new CraftBlockInventoryHolder(world, pos, this); // CraftBukkit
             this.state = state;
             this.level = world;
             this.pos = pos;
@@ -439,6 +505,11 @@
             if (!itemstack.isEmpty()) {
                 this.changed = true;
                 BlockState iblockdata = ComposterBlock.addItem((Entity) null, this.state, this.level, this.pos, itemstack);
+                // Paper start - Add CompostItemEvent and EntityCompostItemEvent
+                if (iblockdata == null) {
+                    return;
+                }
+                // Paper end - Add CompostItemEvent and EntityCompostItemEvent
 
                 this.level.levelEvent(1500, this.pos, iblockdata != this.state ? 1 : 0);
                 this.removeItemNoUpdate(0);
@@ -449,8 +520,9 @@
 
     public static class EmptyContainer extends SimpleContainer implements WorldlyContainer {
 
-        public EmptyContainer() {
+        public EmptyContainer(LevelAccessor generatoraccess, BlockPos blockposition) { // CraftBukkit
             super(0);
+            this.bukkitOwner = new CraftBlockInventoryHolder(generatoraccess, blockposition, this); // CraftBukkit
         }
 
         @Override
