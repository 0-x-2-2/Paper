--- a/net/minecraft/world/level/block/VineBlock.java
+++ b/net/minecraft/world/level/block/VineBlock.java
@@ -24,6 +24,7 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.craftbukkit.event.CraftEventFactory; // CraftBukkit
 
 public class VineBlock extends Block {
 
@@ -203,30 +204,34 @@
                             BlockPos blockposition3 = blockposition2.relative(enumdirection1);
                             BlockPos blockposition4 = blockposition2.relative(enumdirection2);
 
+                            // CraftBukkit start - Call BlockSpreadEvent
+                            BlockPos source = pos;
+
                             if (flag && VineBlock.isAcceptableNeighbour(world, blockposition3, enumdirection1)) {
-                                world.setBlock(blockposition2, (BlockState) this.defaultBlockState().setValue(VineBlock.getPropertyForFace(enumdirection1), true), 2);
+                                CraftEventFactory.handleBlockSpreadEvent(world, source, blockposition2, (BlockState) this.defaultBlockState().setValue(VineBlock.getPropertyForFace(enumdirection1), true), 2);
                             } else if (flag1 && VineBlock.isAcceptableNeighbour(world, blockposition4, enumdirection2)) {
-                                world.setBlock(blockposition2, (BlockState) this.defaultBlockState().setValue(VineBlock.getPropertyForFace(enumdirection2), true), 2);
+                                CraftEventFactory.handleBlockSpreadEvent(world, source, blockposition2, (BlockState) this.defaultBlockState().setValue(VineBlock.getPropertyForFace(enumdirection2), true), 2);
                             } else {
                                 Direction enumdirection3 = enumdirection.getOpposite();
 
                                 if (flag && world.isEmptyBlock(blockposition3) && VineBlock.isAcceptableNeighbour(world, pos.relative(enumdirection1), enumdirection3)) {
-                                    world.setBlock(blockposition3, (BlockState) this.defaultBlockState().setValue(VineBlock.getPropertyForFace(enumdirection3), true), 2);
+                                    CraftEventFactory.handleBlockSpreadEvent(world, source, blockposition3, (BlockState) this.defaultBlockState().setValue(VineBlock.getPropertyForFace(enumdirection3), true), 2);
                                 } else if (flag1 && world.isEmptyBlock(blockposition4) && VineBlock.isAcceptableNeighbour(world, pos.relative(enumdirection2), enumdirection3)) {
-                                    world.setBlock(blockposition4, (BlockState) this.defaultBlockState().setValue(VineBlock.getPropertyForFace(enumdirection3), true), 2);
-                                } else if ((double) random.nextFloat() < 0.05D && VineBlock.isAcceptableNeighbour(world, blockposition2.above(), Direction.UP)) {
-                                    world.setBlock(blockposition2, (BlockState) this.defaultBlockState().setValue(VineBlock.UP, true), 2);
+                                    CraftEventFactory.handleBlockSpreadEvent(world, source, blockposition4, (BlockState) this.defaultBlockState().setValue(VineBlock.getPropertyForFace(enumdirection3), true), 2);
+                                } else if ((double) random.nextFloat() < 0.05D && VineBlock.isAcceptableNeighbour(world, blockposition2.above(), Direction.UP)) {
+                                    CraftEventFactory.handleBlockSpreadEvent(world, source, blockposition2, (BlockState) this.defaultBlockState().setValue(VineBlock.UP, true), 2);
                                 }
+                                // CraftBukkit end
                             }
                         } else if (VineBlock.isAcceptableNeighbour(world, blockposition2, enumdirection)) {
-                            world.setBlock(pos, (BlockState) state.setValue(VineBlock.getPropertyForFace(enumdirection), true), 2);
+                            CraftEventFactory.handleBlockGrowEvent(world, pos, (BlockState) state.setValue(VineBlock.getPropertyForFace(enumdirection), true), 2); // CraftBukkit
                         }
 
                     }
                 } else {
                     if (enumdirection == Direction.UP && pos.getY() < world.getMaxY()) {
                         if (this.canSupportAtFace(world, pos, enumdirection)) {
-                            world.setBlock(pos, (BlockState) state.setValue(VineBlock.UP, true), 2);
+                            CraftEventFactory.handleBlockGrowEvent(world, pos, (BlockState) state.setValue(VineBlock.UP, true), 2); // CraftBukkit
                             return;
                         }
 
@@ -246,7 +251,7 @@
                             }
 
                             if (this.hasHorizontalConnection(iblockdata2)) {
-                                world.setBlock(blockposition1, iblockdata2, 2);
+                                CraftEventFactory.handleBlockSpreadEvent(world, pos, blockposition1, iblockdata2, 2); // CraftBukkit
                             }
 
                             return;
@@ -261,7 +266,7 @@
                             BlockState iblockdata4 = this.copyRandomFaces(state, iblockdata3, random);
 
                             if (iblockdata3 != iblockdata4 && this.hasHorizontalConnection(iblockdata4)) {
-                                world.setBlock(blockposition2, iblockdata4, 2);
+                                CraftEventFactory.handleBlockSpreadEvent(world, pos, blockposition2, iblockdata4, 2); // CraftBukkit
                             }
                         }
                     }
