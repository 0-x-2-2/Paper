--- a/net/minecraft/world/level/block/entity/LecternBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/LecternBlockEntity.java
@@ -28,6 +28,17 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec2;
 import net.minecraft.world.phys.Vec3;
+// CraftBukkit start
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import org.bukkit.Location;
+import org.bukkit.block.Lectern;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.util.CraftLocation;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.inventory.InventoryHolder;
+// CraftBukkit end
 
 public class LecternBlockEntity extends BlockEntity implements Clearable, MenuProvider {
 
@@ -35,8 +46,55 @@
     public static final int NUM_DATA = 1;
     public static final int SLOT_BOOK = 0;
     public static final int NUM_SLOTS = 1;
-    public final Container bookAccess = new Container() {
+    // CraftBukkit start - add fields and methods
+    public final Container bookAccess = new LecternInventory();
+    public class LecternInventory implements Container {
+
+        public List<HumanEntity> transaction = new ArrayList<>();
+        private int maxStack = 1;
+
         @Override
+        public List<ItemStack> getContents() {
+            return Arrays.asList(LecternBlockEntity.this.book);
+        }
+
+        @Override
+        public void onOpen(CraftHumanEntity who) {
+            this.transaction.add(who);
+        }
+
+        @Override
+        public void onClose(CraftHumanEntity who) {
+            this.transaction.remove(who);
+        }
+
+        @Override
+        public List<HumanEntity> getViewers() {
+            return this.transaction;
+        }
+
+        @Override
+        public void setMaxStackSize(int i) {
+            this.maxStack = i;
+        }
+
+        @Override
+        public Location getLocation() {
+            if (LecternBlockEntity.this.level == null) return null;
+            return CraftLocation.toBukkit(LecternBlockEntity.this.worldPosition, LecternBlockEntity.this.level.getWorld());
+        }
+
+        @Override
+        public InventoryHolder getOwner() {
+            return (Lectern) LecternBlockEntity.this.getOwner();
+        }
+
+        public LecternBlockEntity getLectern() {
+            return LecternBlockEntity.this;
+        }
+        // CraftBukkit end
+
+        @Override
         public int getContainerSize() {
             return 1;
         }
@@ -80,11 +138,20 @@
         }
 
         @Override
-        public void setItem(int slot, ItemStack stack) {}
+        // CraftBukkit start
+        public void setItem(int slot, ItemStack stack) {
+            if (slot == 0) {
+                LecternBlockEntity.this.setBook(stack);
+                if (LecternBlockEntity.this.getLevel() != null) {
+                    LecternBlock.resetBookState(null, LecternBlockEntity.this.getLevel(), LecternBlockEntity.this.getBlockPos(), LecternBlockEntity.this.getBlockState(), LecternBlockEntity.this.hasBook());
+                }
+            }
+        }
+        // CraftBukkit end
 
         @Override
         public int getMaxStackSize() {
-            return 1;
+            return this.maxStack; // CraftBukkit
         }
 
         @Override
@@ -164,7 +231,7 @@
         if (j != this.page) {
             this.page = j;
             this.setChanged();
-            LecternBlock.signalPageChange(this.getLevel(), this.getBlockPos(), this.getBlockState());
+            if (this.level != null) LecternBlock.signalPageChange(this.getLevel(), this.getBlockPos(), this.getBlockState()); // CraftBukkit
         }
 
     }
@@ -189,6 +256,35 @@
         return book;
     }
 
+    // CraftBukkit start
+    private final CommandSource commandSource = new CommandSource() {
+
+        @Override
+        public void sendSystemMessage(Component message) {
+        }
+
+        @Override
+        public org.bukkit.command.CommandSender getBukkitSender(CommandSourceStack wrapper) {
+            return wrapper.getEntity() != null ? wrapper.getEntity().getBukkitEntity() : new org.bukkit.craftbukkit.command.CraftBlockCommandSender(wrapper, LecternBlockEntity.this);
+        }
+
+        @Override
+        public boolean acceptsSuccess() {
+            return false;
+        }
+
+        @Override
+        public boolean acceptsFailure() {
+            return false;
+        }
+
+        @Override
+        public boolean shouldInformAdmins() {
+            return false;
+        }
+    };
+    // CraftBukkit end
+
     private CommandSourceStack createCommandSourceStack(@Nullable Player player, ServerLevel world) {
         String s;
         Object object;
@@ -203,7 +299,8 @@
 
         Vec3 vec3d = Vec3.atCenterOf(this.worldPosition);
 
-        return new CommandSourceStack(CommandSource.NULL, vec3d, Vec2.ZERO, world, 2, s, (Component) object, world.getServer(), player);
+        // CraftBukkit - commandSource
+        return new CommandSourceStack(this.commandSource, vec3d, Vec2.ZERO, world, 2, s, (Component) object, world.getServer(), player);
     }
 
     @Override
@@ -236,7 +333,7 @@
 
     @Override
     public AbstractContainerMenu createMenu(int syncId, Inventory playerInventory, Player player) {
-        return new LecternMenu(syncId, this.bookAccess, this.dataAccess);
+        return new LecternMenu(syncId, this.bookAccess, this.dataAccess, playerInventory); // CraftBukkit
     }
 
     @Override
