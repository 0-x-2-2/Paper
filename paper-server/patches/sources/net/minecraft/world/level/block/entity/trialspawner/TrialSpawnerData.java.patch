--- a/net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerData.java
+++ b/net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerData.java
@@ -100,9 +100,9 @@
         this.ejectingLootTable = rewardLootTable;
     }
 
-    public void reset() {
+    public void reset(TrialSpawner logic) { // Paper - Fix TrialSpawner forgets assigned mob; MC-273635
         this.currentMobs.clear();
-        this.nextSpawnData = Optional.empty();
+        if (!logic.getConfig().spawnPotentialsDefinition().isEmpty()) this.nextSpawnData = Optional.empty(); // Paper - Fix TrialSpawner forgets assigned mob; MC-273635
         this.resetStatistics();
     }
 
@@ -210,7 +210,7 @@
     }
 
     public void resetAfterBecomingOminous(TrialSpawner logic, ServerLevel world) {
-        Stream stream = this.currentMobs.stream();
+        Stream<UUID> stream = this.currentMobs.stream(); // CraftBukkit - decompile error
 
         Objects.requireNonNull(world);
         stream.map(world::getEntity).forEach((entity) -> {
@@ -222,7 +222,7 @@
                     entityinsentient.dropPreservedEquipment(world);
                 }
 
-                entity.remove(Entity.RemovalReason.DISCARDED);
+                entity.remove(Entity.RemovalReason.DISCARDED, org.bukkit.event.entity.EntityRemoveEvent.Cause.DESPAWN); // CraftBukkit - Add bukkit remove cause;
             }
         });
         if (!logic.getOminousConfig().spawnPotentialsDefinition().isEmpty()) {
