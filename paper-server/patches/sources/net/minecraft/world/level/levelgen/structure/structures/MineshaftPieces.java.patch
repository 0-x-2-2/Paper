--- a/net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces.java
+++ b/net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces.java
@@ -12,6 +12,7 @@
 import net.minecraft.core.Direction;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.NbtOps;
+import net.minecraft.nbt.Tag;
 import net.minecraft.resources.ResourceKey;
 import net.minecraft.tags.BiomeTags;
 import net.minecraft.util.RandomSource;
@@ -30,8 +31,6 @@
 import net.minecraft.world.level.block.FenceBlock;
 import net.minecraft.world.level.block.RailBlock;
 import net.minecraft.world.level.block.WallTorchBlock;
-import net.minecraft.world.level.block.entity.BlockEntity;
-import net.minecraft.world.level.block.entity.SpawnerBlockEntity;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.properties.RailShape;
 import net.minecraft.world.level.chunk.ChunkGenerator;
@@ -520,14 +519,19 @@
 
                         if (chunkBox.isInside(blockposition_mutableblockposition) && this.isInterior(world, 1, 0, l, chunkBox)) {
                             this.hasPlacedSpider = true;
-                            world.setBlock(blockposition_mutableblockposition, Blocks.SPAWNER.defaultBlockState(), 2);
-                            BlockEntity tileentity = world.getBlockEntity(blockposition_mutableblockposition);
-
-                            if (tileentity instanceof SpawnerBlockEntity) {
-                                SpawnerBlockEntity tileentitymobspawner = (SpawnerBlockEntity) tileentity;
+                            // CraftBukkit start
+                            /*
+                            generatoraccessseed.setBlock(blockposition_mutableblockposition, Blocks.SPAWNER.defaultBlockState(), 2);
+                            TileEntity tileentity = generatoraccessseed.getBlockEntity(blockposition_mutableblockposition);
 
-                                tileentitymobspawner.setEntityId(EntityType.CAVE_SPIDER, random);
+                            if (tileentity instanceof TileEntityMobSpawner) {
+                                TileEntityMobSpawner tileentitymobspawner = (TileEntityMobSpawner) tileentity;
+
+                                tileentitymobspawner.setEntityId(EntityTypes.CAVE_SPIDER, randomsource);
                             }
+                            */
+                            this.placeCraftSpawner(world, blockposition_mutableblockposition, org.bukkit.entity.EntityType.CAVE_SPIDER, 2);
+                            // CraftBukkit end
                         }
                     }
                 }
@@ -819,11 +823,11 @@
 
         public MineShaftRoom(CompoundTag nbt) {
             super(StructurePieceType.MINE_SHAFT_ROOM, nbt);
-            DataResult dataresult = BoundingBox.CODEC.listOf().parse(NbtOps.INSTANCE, nbt.getList("Entrances", 11));
+            DataResult<List<BoundingBox>> dataresult = BoundingBox.CODEC.listOf().parse(NbtOps.INSTANCE, nbt.getList("Entrances", 11)); // CraftBukkit - decompile error
             Logger logger = MineshaftPieces.LOGGER;
 
             Objects.requireNonNull(logger);
-            Optional optional = dataresult.resultOrPartial(logger::error);
+            Optional<List<BoundingBox>> optional = dataresult.resultOrPartial(logger::error); // CraftBukkit - decompile error
             List list = this.childEntranceBoxes;
 
             Objects.requireNonNull(this.childEntranceBoxes);
@@ -929,7 +933,7 @@
         @Override
         protected void addAdditionalSaveData(StructurePieceSerializationContext context, CompoundTag nbt) {
             super.addAdditionalSaveData(context, nbt);
-            DataResult dataresult = BoundingBox.CODEC.listOf().encodeStart(NbtOps.INSTANCE, this.childEntranceBoxes);
+            DataResult<Tag> dataresult = BoundingBox.CODEC.listOf().encodeStart(NbtOps.INSTANCE, this.childEntranceBoxes); // CraftBukkit - decompile error
             Logger logger = MineshaftPieces.LOGGER;
 
             Objects.requireNonNull(logger);
