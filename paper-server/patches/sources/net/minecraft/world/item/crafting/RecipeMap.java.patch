--- a/net/minecraft/world/item/crafting/RecipeMap.java
+++ b/net/minecraft/world/item/crafting/RecipeMap.java
@@ -11,6 +11,10 @@
 import javax.annotation.Nullable;
 import net.minecraft.resources.ResourceKey;
 import net.minecraft.world.level.Level;
+// CraftBukkit start
+import com.google.common.collect.LinkedHashMultimap;
+import com.google.common.collect.Maps;
+// CraftBukkit end
 
 public class RecipeMap {
 
@@ -35,11 +39,39 @@
             com_google_common_collect_immutablemap_builder.put(recipeholder.id(), recipeholder);
         }
 
-        return new RecipeMap(builder.build(), com_google_common_collect_immutablemap_builder.build());
+        // CraftBukkit start - mutable
+        return new RecipeMap(LinkedHashMultimap.create(builder.build()), Maps.newHashMap(com_google_common_collect_immutablemap_builder.build()));
     }
 
+    public void addRecipe(RecipeHolder<?> irecipe) {
+        Collection<RecipeHolder<?>> map = this.byType.get(irecipe.value().getType());
+
+        if (this.byKey.containsKey(irecipe.id())) {
+            throw new IllegalStateException("Duplicate recipe ignored with ID " + irecipe.id());
+        } else {
+            map.add(irecipe);
+            this.byKey.put(irecipe.id(), irecipe);
+        }
+    }
+
+    public boolean removeRecipe(ResourceKey<Recipe<?>> mcKey) {
+        boolean removed = false;
+        Iterator<RecipeHolder<?>> iter = this.byType.values().iterator();
+        while (iter.hasNext()) {
+            RecipeHolder<?> recipe = iter.next();
+            if (recipe.id().equals(mcKey)) {
+                iter.remove();
+                removed = true;
+            }
+        }
+        removed |= this.byKey.remove(mcKey) != null;
+
+        return removed;
+    }
+    // CraftBukkit end
+
     public <I extends RecipeInput, T extends Recipe<I>> Collection<RecipeHolder<T>> byType(RecipeType<T> type) {
-        return this.byType.get(type);
+        return (Collection) this.byType.get(type); // CraftBukkit - decompile error
     }
 
     public Collection<RecipeHolder<?>> values() {
