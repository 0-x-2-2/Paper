--- a/net/minecraft/world/item/component/Consumable.java
+++ b/net/minecraft/world/item/component/Consumable.java
@@ -29,6 +29,11 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.gameevent.GameEvent;
 
+// CraftBukkit start
+import net.minecraft.world.item.Items;
+import org.bukkit.event.entity.EntityPotionEffectEvent;
+// CraftBukkit end
+
 public record Consumable(float consumeSeconds, ItemUseAnimation animation, Holder<SoundEvent> sound, boolean hasConsumeParticles, List<ConsumeEffect> onConsumeEffects) {
 
     public static final float DEFAULT_CONSUME_SECONDS = 1.6F;
@@ -69,8 +74,19 @@
             consumablelistener.onConsume(world, user, stack, this);
         });
         if (!world.isClientSide) {
+            // CraftBukkit start
+            EntityPotionEffectEvent.Cause cause;
+            if (stack.is(Items.MILK_BUCKET)) {
+                cause = EntityPotionEffectEvent.Cause.MILK;
+            } else if (stack.is(Items.POTION)) {
+                cause = EntityPotionEffectEvent.Cause.POTION_DRINK;
+            } else {
+                cause = EntityPotionEffectEvent.Cause.FOOD;
+            }
+
             this.onConsumeEffects.forEach((consumeeffect) -> {
-                consumeeffect.apply(world, stack, user);
+                consumeeffect.apply(world, stack, user, cause);
+                // CraftBukkit end
             });
         }
 
@@ -79,6 +95,15 @@
         return stack;
     }
 
+    // CraftBukkit start
+    public void cancelUsingItem(net.minecraft.server.level.ServerPlayer entityplayer, ItemStack itemstack) {
+        itemstack.getAllOfType(ConsumableListener.class).forEach((consumablelistener) -> {
+            consumablelistener.cancelUsingItem(entityplayer, itemstack);
+        });
+        entityplayer.server.getPlayerList().sendActivePlayerEffects(entityplayer);
+    }
+    // CraftBukkit end
+
     public boolean canConsume(LivingEntity user, ItemStack stack) {
         FoodProperties foodinfo = (FoodProperties) stack.get(DataComponents.FOOD);
 
