--- a/net/minecraft/world/inventory/MenuType.java
+++ b/net/minecraft/world/inventory/MenuType.java
@@ -26,7 +_,7 @@
     public static final MenuType<FurnaceMenu> FURNACE = register("furnace", FurnaceMenu::new);
     public static final MenuType<GrindstoneMenu> GRINDSTONE = register("grindstone", GrindstoneMenu::new);
     public static final MenuType<HopperMenu> HOPPER = register("hopper", HopperMenu::new);
-    public static final MenuType<LecternMenu> LECTERN = register("lectern", (containerId, playerInventory) -> new LecternMenu(containerId));
+    public static final MenuType<LecternMenu> LECTERN = register("lectern", LecternMenu::new); // CraftBukkit
     public static final MenuType<LoomMenu> LOOM = register("loom", LoomMenu::new);
     public static final MenuType<MerchantMenu> MERCHANT = register("merchant", MerchantMenu::new);
     public static final MenuType<ShulkerBoxMenu> SHULKER_BOX = register("shulker_box", ShulkerBoxMenu::new);
@@ -35,17 +_,17 @@
     public static final MenuType<CartographyTableMenu> CARTOGRAPHY_TABLE = register("cartography_table", CartographyTableMenu::new);
     public static final MenuType<StonecutterMenu> STONECUTTER = register("stonecutter", StonecutterMenu::new);
     private final FeatureFlagSet requiredFeatures;
-    private final MenuType.MenuSupplier<T> constructor;
+    private final MenuSupplier<T> constructor;
 
-    private static <T extends AbstractContainerMenu> MenuType<T> register(String key, MenuType.MenuSupplier<T> factory) {
+    private static <T extends AbstractContainerMenu> MenuType<T> register(String key, MenuSupplier<T> factory) {
         return Registry.register(BuiltInRegistries.MENU, key, new MenuType<>(factory, FeatureFlags.VANILLA_SET));
     }
 
-    private static <T extends AbstractContainerMenu> MenuType<T> register(String key, MenuType.MenuSupplier<T> factory, FeatureFlag... requiredFeatures) {
+    private static <T extends AbstractContainerMenu> MenuType<T> register(String key, MenuSupplier<T> factory, FeatureFlag... requiredFeatures) {
         return Registry.register(BuiltInRegistries.MENU, key, new MenuType<>(factory, FeatureFlags.REGISTRY.subset(requiredFeatures)));
     }
 
-    private MenuType(MenuType.MenuSupplier<T> constructor, FeatureFlagSet requiredFeatures) {
+    private MenuType(MenuSupplier<T> constructor, FeatureFlagSet requiredFeatures) {
         this.constructor = constructor;
         this.requiredFeatures = requiredFeatures;
     }
