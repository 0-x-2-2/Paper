--- a/net/minecraft/world/inventory/CraftingMenu.java
+++ b/net/minecraft/world/inventory/CraftingMenu.java
@@ -30,13 +_,16 @@
     public final ContainerLevelAccess access;
     private final Player player;
     private boolean placingRecipe;
+    // CraftBukkit start
+    private org.bukkit.craftbukkit.inventory.CraftInventoryView bukkitEntity = null;
+    // CraftBukkit end
 
     public CraftingMenu(int containerId, Inventory playerInventory) {
         this(containerId, playerInventory, ContainerLevelAccess.NULL);
     }
 
     public CraftingMenu(int containerId, Inventory playerInventory, ContainerLevelAccess access) {
-        super(MenuType.CRAFTING, containerId, 3, 3);
+        super(MenuType.CRAFTING, containerId, 3, 3, playerInventory); // CraftBukkit - pass player
         this.access = access;
         this.player = playerInventory.player;
         this.addResultSlot(this.player, 124, 35);
@@ -56,6 +_,7 @@
         ServerPlayer serverPlayer = (ServerPlayer)player;
         ItemStack itemStack = ItemStack.EMPTY;
         Optional<RecipeHolder<CraftingRecipe>> recipeFor = level.getServer().getRecipeManager().getRecipeFor(RecipeType.CRAFTING, craftInput, level, recipe);
+        craftSlots.setCurrentRecipe(recipeFor.orElse(null)); // CraftBukkit
         if (recipeFor.isPresent()) {
             RecipeHolder<CraftingRecipe> recipeHolder = recipeFor.get();
             CraftingRecipe craftingRecipe = recipeHolder.value();
@@ -66,6 +_,7 @@
                 }
             }
         }
+        itemStack = org.bukkit.craftbukkit.event.CraftEventFactory.callPreCraftEvent(craftSlots, resultSlots, itemStack, menu.getBukkitView(), recipeFor.map(RecipeHolder::value).orElse(null) instanceof net.minecraft.world.item.crafting.RepairItemRecipe); // CraftBukkit
 
         resultSlots.setItem(0, itemStack);
         menu.setRemoteSlot(0, itemStack);
@@ -102,6 +_,7 @@
 
     @Override
     public boolean stillValid(Player player) {
+        if (!this.checkReachable) return true; // CraftBukkit
         return stillValid(this.access, player, Blocks.CRAFTING_TABLE);
     }
 
@@ -176,4 +_,17 @@
     protected Player owner() {
         return this.player;
     }
+
+    // CraftBukkit start
+    @Override
+    public org.bukkit.craftbukkit.inventory.CraftInventoryView getBukkitView() {
+        if (this.bukkitEntity != null) {
+            return this.bukkitEntity;
+        }
+
+        org.bukkit.craftbukkit.inventory.CraftInventoryCrafting inventory = new org.bukkit.craftbukkit.inventory.CraftInventoryCrafting(this.craftSlots, this.resultSlots);
+        this.bukkitEntity = new org.bukkit.craftbukkit.inventory.CraftInventoryView(this.player.getBukkitEntity(), inventory, this);
+        return this.bukkitEntity;
+    }
+    // CraftBukkit end
 }
