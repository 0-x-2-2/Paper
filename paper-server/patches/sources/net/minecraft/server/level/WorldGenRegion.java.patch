--- a/net/minecraft/server/level/WorldGenRegion.java
+++ b/net/minecraft/server/level/WorldGenRegion.java
@@ -167,7 +167,27 @@
         int k = this.center.getPos().getChessboardDistance(chunkX, chunkZ);
 
         return k < this.generatingStep.directDependencies().size();
+    }
+
+    // Paper start - if loaded util
+    @Nullable
+    @Override
+    public ChunkAccess getChunkIfLoadedImmediately(int x, int z) {
+        return this.getChunk(x, z, ChunkStatus.FULL, false);
+    }
+
+    @Override
+    public final BlockState getBlockStateIfLoaded(BlockPos blockposition) {
+        ChunkAccess chunk = this.getChunkIfLoadedImmediately(blockposition.getX() >> 4, blockposition.getZ() >> 4);
+        return chunk == null ? null : chunk.getBlockState(blockposition);
+    }
+
+    @Override
+    public final FluidState getFluidIfLoaded(BlockPos blockposition) {
+        ChunkAccess chunk = this.getChunkIfLoadedImmediately(blockposition.getX() >> 4, blockposition.getZ() >> 4);
+        return chunk == null ? null : chunk.getFluidState(blockposition);
     }
+    // Paper end
 
     @Override
     public BlockState getBlockState(BlockPos pos) {
@@ -217,7 +237,7 @@
         if (iblockdata.isAir()) {
             return false;
         } else {
-            if (drop) {
+            if (false) { // CraftBukkit - SPIGOT-6833: Do not drop during world generation
                 BlockEntity tileentity = iblockdata.hasBlockEntity() ? this.getBlockEntity(pos) : null;
 
                 Block.dropResources(iblockdata, this.level, pos, tileentity, breakingEntity, ItemStack.EMPTY);
@@ -264,6 +284,7 @@
         }
     }
 
+    private boolean hasSetFarWarned = false; // Paper - Buffer OOB setBlock calls
     @Override
     public boolean ensureCanWrite(BlockPos pos) {
         int i = SectionPos.blockToSectionCoord(pos.getX());
@@ -283,7 +304,15 @@
 
             return true;
         } else {
+            // Paper start - Buffer OOB setBlock calls
+            if (!hasSetFarWarned) {
             Util.logAndPauseIfInIde("Detected setBlock in a far chunk [" + i + ", " + j + "], pos: " + String.valueOf(pos) + ", status: " + String.valueOf(this.generatingStep.targetStatus()) + (this.currentlyGenerating == null ? "" : ", currently generating: " + (String) this.currentlyGenerating.get()));
+                hasSetFarWarned = true;
+                if (this.getServer() != null && this.getServer().isDebugging()) {
+                    io.papermc.paper.util.TraceUtil.dumpTraceForThread("far setBlock call");
+                }
+            }
+            // Paper end - Buffer OOB setBlock calls
             return false;
         }
     }
@@ -336,6 +365,13 @@
 
     @Override
     public boolean addFreshEntity(Entity entity) {
+        // CraftBukkit start
+        return this.addFreshEntity(entity, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.DEFAULT);
+    }
+
+    @Override
+    public boolean addFreshEntity(Entity entity, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason reason) {
+        // CraftBukkit end
         int i = SectionPos.blockToSectionCoord(entity.getBlockX());
         int j = SectionPos.blockToSectionCoord(entity.getBlockZ());
 
